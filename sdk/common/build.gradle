plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

// Configure the SDKBuildInfo class generator
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    exec {
        // Teamcity workaround: using 'git describe' to determine dirty status doesn't work there.
        commandLine '/bin/sh', '-c', 'if [ -n "$(git diff --name-only HEAD)" ]; then echo -dirty; fi'
        standardOutput = stdout
    }
    return stdout.toString().replace("\n", "")
}
buildConfig {
    packageName = 'com.mesosphere.sdk.generated'
    clsName = 'SDKBuildInfo'

    version = project.version // VERSION
    appName = project.group + '.' + project.name // NAME
    buildConfigField 'String', 'GIT_SHA', "${getGitHash()}"
    buildConfigField 'long', 'BUILD_TIME_EPOCH_MS', System.currentTimeMillis() + 'L'
}

publishing {
    repositories {
        maven {
            if(project.version.endsWith('-SNAPSHOT')) {
                url "s3://downloads.mesosphere.io/maven-snapshot/"
            } else {
                url "s3://downloads.mesosphere.io/maven/"
            }
            credentials(AwsCredentials) {
                accessKey System.env['AWS_ACCESS_KEY_ID']
                secretKey System.env['AWS_SECRET_ACCESS_KEY']
            }
        }
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId 'common'
                version project.version

                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    compile 'commons-codec:commons-codec:1.11'
    testCompile 'junit:junit:4.12'
}
